name: Laravel Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: laravel_test
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo, phar, tokenizer, xml, xmlwriter, zip
        coverage: xdebug

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      run: |
        mysql -u root -ppassword -e "CREATE DATABASE IF NOT EXISTS laravel_test;"
        mysql -u root -ppassword -e "GRANT ALL PRIVILEGES ON laravel_test.* TO 'root'@'localhost';"
        mysql -u root -ppassword -e "FLUSH PRIVILEGES;"

    - name: Configure Database
      run: |
        php artisan config:cache
        php artisan config:set database.connections.mysql.database laravel_test
        php artisan config:set database.connections.mysql.username root
        php artisan config:set database.connections.mysql.password password

    - name: Run Migrations
      run: php artisan migrate --force

    - name: Run Seeders
      run: php artisan db:seed --force

    - name: Install NPM Dependencies
      run: npm ci

    - name: Build Assets
      run: npm run build

    - name: Execute Unit Tests
      run: php artisan test --testsuite=Unit --coverage-clover=coverage.xml

    - name: Execute Feature Tests
      run: php artisan test --testsuite=Feature --coverage-clover=coverage-feature.xml

    - name: Execute Integration Tests
      run: php artisan test --testsuite=Integration --coverage-clover=coverage-integration.xml

    - name: Execute Performance Tests
      run: php artisan test --testsuite=Performance --coverage-clover=coverage-performance.xml

    - name: Execute API Tests
      run: php artisan test --testsuite=Api --coverage-clover=coverage-api.xml

    - name: Run PHPStan Analysis
      run: ./vendor/bin/phpstan analyse app --level=5 --no-progress

    - name: Run PHP CS Fixer
      run: ./vendor/bin/php-cs-fixer fix --dry-run --diff

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unit
        name: codecov-umbrella
        fail_ci_if_error: true

    - name: Upload feature coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage-feature.xml
        flags: feature
        name: codecov-umbrella
        fail_ci_if_error: true

    - name: Upload integration coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage-integration.xml
        flags: integration
        name: codecov-umbrella
        fail_ci_if_error: true

  security-check:
    runs-on: ubuntu-latest
    needs: laravel-tests

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Run Security Check
      run: ./vendor/bin/security-checker security:check composer.lock

    - name: Run PHP Security Checker
      run: composer audit

  code-quality:
    runs-on: ubuntu-latest
    needs: laravel-tests

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Run PHP Mess Detector
      run: ./vendor/bin/phpmd app text cleancode,codesize,controversial,design,naming,unusedcode

    - name: Run PHP Copy/Paste Detector
      run: ./vendor/bin/phpcpd app

    - name: Run PHP Loc
      run: ./vendor/bin/phploc app

  performance-test:
    runs-on: ubuntu-latest
    needs: laravel-tests

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Run Performance Tests
      run: php artisan test --testsuite=Performance --stop-on-failure

    - name: Generate Performance Report
      run: |
        echo "Performance Test Results:" > performance-report.txt
        php artisan test --testsuite=Performance --log-junit performance.xml >> performance-report.txt

    - name: Upload Performance Report
      uses: actions/upload-artifact@v3
      with:
        name: performance-report
        path: performance-report.txt

  notify:
    runs-on: ubuntu-latest
    needs: [laravel-tests, security-check, code-quality, performance-test]
    if: always()

    steps:
    - name: Notify on Success
      if: needs.laravel-tests.result == 'success' && needs.security-check.result == 'success' && needs.code-quality.result == 'success' && needs.performance-test.result == 'success'
      run: |
        echo "✅ All tests passed successfully!"
        echo "🎉 Code quality checks passed!"
        echo "🔒 Security checks passed!"
        echo "⚡ Performance tests passed!"

    - name: Notify on Failure
      if: needs.laravel-tests.result == 'failure' || needs.security-check.result == 'failure' || needs.code-quality.result == 'failure' || needs.performance-test.result == 'failure'
      run: |
        echo "❌ Some checks failed!"
        echo "Please review the logs above for details."
        exit 1 